name: Tests

on:
  push:
  pull_request:
  schedule:
    - cron:  '0 0 * * 0'

jobs:
  standard-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the project
        run: |
          echo "UID=$(id --user)" > .env
          docker-compose up -d --build
      - name: Lint the code
        run: |
          docker-compose exec -T document-merge-service poetry run python ./manage.py makemigrations --check --dry-run --no-input
      - name: Run pytest
        run: docker-compose exec -T document-merge-service poetry run pytest --no-cov-on-fail --cov --create-db -vv
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'
      - name: Install poetry
        run: pip install poetry
      - name: Install black
        run: pip install black==$(poetry show | grep '^black\s' | grep -Po '\d+\.\d+\.\d+')
      - name: Run black
        run: black .
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'
      - name: Install poetry
        run: pip install poetry
      - name: Install flake8
        run: pip install flake8==$(poetry show | grep '^flake8\s' | grep -Po '\d+\.\d+\.\d+')
      - name: Run flake8
        run: flake8
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'
      - name: Install poetry
        run: pip install poetry
      - name: Install env
        run: poetry install
      - name: Run mypy
        run: poetry run mypy document_merge_service
  gitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'
      - name: Install gitlint
        run: pip install gitlint
      - name: Run gitlint
        run: gitlint --contrib contrib-title-conventional-commits
